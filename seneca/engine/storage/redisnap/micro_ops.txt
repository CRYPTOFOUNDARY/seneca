"""
Smaller operations that combined can describe RESP commands
"""
from abc import ABCMeta, abstractmethod
from typing import Union

from seneca.engine.util import auto_set_fields

# TODO: must pick a behavior based on address type.
# TODO: probably want a field on all MicroOps called required ops. May want to rename MicroOps to just Ops

class MicroOp(metaclass=ABCMeta):
    """
    MicroOps:
    * Used to describe the steps taken when RESP commands.
    * Redisnap local backend uses command objects to generate these ops, then
    it runs them.
    * Used to figure out dependencies.
    * Must be runnable by redis_backend for commands that fallthrough the save
    point stack
    * But, not the prefered way to run commands on the Redis backend.
    Redis (of course) has its own modeling of how RESP commands break down into
    more basic operations.
    """
    def __repr__(self):
        return '<RESP MicroOP (%s) %s>' % (self.__class__.__name__, str(self.__dict__))

    @abstractmethod
    def to_command():
        pass

class ShallowTypeCheckMicroOP(MicroOp):
    @auto_set_fields
    def __init__(self, addr):
        """
        Type checking is unique in Redis, because empty addresses are fully
        polymorphic, so it passes on correct type or on does not exist.
        """
        pass

class DeepTypeCheckMicroOP(MicroOp):
    @auto_set_fields
    def __init__(self, addr, exact_expected_type):
        """
        Type checking is unique in Redis, because empty addresses are fully
        polymorphic, so it passes on correct type or on does not exist.
        """
        pass

class ReadMicroOP(MicroOp):
    @auto_set_fields
    def __init__(self, addr):
        pass

class WriteMicroOP(MicroOp):
    @auto_set_fields
    def __init__(self, addr, payload):
        pass

class IncrByMicroOP(MicroOp):
    # TODO: Must always do type check
    @auto_set_fields
    def __init__(self, addr, payload):
        pass

class AppendMicroOP(MicroOp):
    # TODO: Must always do type check
    @auto_set_fields
    def __init__(self, addr, payload):
        pass

# NOTE: It would be possible to add more granular operations like check-exists,
# but write now CHECK will just map to ReadMicroOP
